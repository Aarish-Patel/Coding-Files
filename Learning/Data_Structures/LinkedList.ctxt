#BlueJ class context
comment0.target=LinkedList
comment1.params=
comment1.target=LinkedList()
comment10.params=lists
comment10.target=void\ combine(LinkedList[])
comment11.params=
comment11.target=LinkedList[]\ splitmid()
comment12.params=
comment12.target=LinkedList[]\ alternatingsplit()
comment13.params=m\ n
comment13.target=LinkedList[]\ split(int,\ int)
comment14.params=
comment14.target=LinkedList\ cloneLinkedList()
comment15.params=value
comment15.target=int\ indexOf(java.lang.Comparable)
comment16.params=value
comment16.target=int\ lastIndexOf(java.lang.Comparable)
comment17.params=index
comment17.target=java.lang.Comparable\ get(int)
comment18.params=index\ ndata
comment18.target=void\ set(int,\ java.lang.Comparable)
comment19.params=index
comment19.target=java.lang.Comparable\ pop(int)
comment2.params=size
comment2.target=LinkedList(int)
comment20.params=data
comment20.target=void\ insert(java.lang.Comparable)
comment21.params=index\ data
comment21.target=void\ insert(int,\ java.lang.Comparable)
comment22.params=values
comment22.target=void\ insert(java.lang.Comparable[])
comment23.params=index\ values
comment23.target=void\ insert(int,\ java.lang.Comparable[])
comment24.params=data
comment24.target=void\ insertAtStart(java.lang.Comparable)
comment25.params=values
comment25.target=void\ insertAtStart(java.lang.Comparable[])
comment26.params=values
comment26.target=void\ insert(java.util.Collection)
comment27.params=index\ list
comment27.target=void\ insert(int,\ java.util.Collection)
comment28.params=list
comment28.target=void\ insertAtStart(java.util.Collection)
comment29.params=data
comment29.target=void\ deleteAllOccur(java.lang.Comparable)
comment3.params=argument
comment3.target=void\ get_default(java.lang.Number)
comment30.params=data
comment30.target=void\ delete(java.lang.Comparable)
comment31.params=st_index\ end_index
comment31.target=void\ delete(int,\ int)
comment32.params=index
comment32.target=void\ deleteAt(int)
comment33.params=st_index
comment33.target=void\ deleteFrom(int)
comment34.params=c
comment34.target=void\ deleteType(java.lang.Class)
comment35.params=node
comment35.target=void\ deleteNode(Node)
comment36.params=
comment36.target=void\ deldup()
comment37.params=
comment37.target=java.lang.String\ toString()
comment38.params=
comment38.target=void\ show()
comment4.params=
comment4.target=void\ get_min()
comment5.params=
comment5.target=void\ get_max()
comment6.params=
comment6.target=void\ sort()
comment7.params=value
comment7.target=boolean\ search(java.lang.Comparable)
comment8.params=
comment8.target=void\ reverse()
comment9.params=LinkedList2
comment9.target=void\ combine(LinkedList)
numComments=39
